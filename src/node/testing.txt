node.testing
============

FullMappingTester
-----------------

    >>> from node.testing import FullMappingTester
    
    >>> class TestMapping(object):
    ...     def __init__(self):
    ...         self.data = dict()
    
    >>> class TestNode(TestMapping):
    ...     def __init__(self, name=None, parent=None):
    ...         super(TestNode, self).__init__()
    ...         self.__name__ = name
    ...         self.__parent__ = parent

``__setitem__``
::

    >>> fmtester = FullMappingTester(TestMapping)
    >>> fmtester.test___setitem__()
    Traceback (most recent call last):
      ...
    TypeError: 'TestMapping' object does not support item assignment
    
    >>> class TestMappingSetItem(TestMapping):
    ...     def __setitem__(self, key, value):
    ...         self.data[key] = value
    
    >>> fmtester = FullMappingTester(TestMappingSetItem)
    >>> fmtester.test___setitem__()
    Traceback (most recent call last):
      ...
    TypeError: __init__() got an unexpected keyword argument 'name'
    
    >>> class TestNodeSetItem(TestNode, TestMappingSetItem): pass
    >>> fmtester = FullMappingTester(TestNodeSetItem)
    >>> fmtester.test___setitem__()
    
``__getitem__``
::

    >>> fmtester = FullMappingTester(TestMapping)
    >>> fmtester.test___getitem__()
    Traceback (most recent call last):
      ...
    TypeError: 'TestMapping' object is unsubscriptable
    
    >>> class TestMappingGetItem(TestMappingSetItem):
    ...     def __getitem__(self, key):
    ...         return self.data[key]
    
    >>> fmtester = FullMappingTester(TestMappingGetItem)
    >>> fmtester.context['foo'] = TestMappingGetItem()
    >>> fmtester.context['bar'] = TestMappingGetItem()
    >>> fmtester.test___getitem__()
    Traceback (most recent call last):
      ...
    AttributeError: 'TestMappingGetItem' object has no attribute '__name__'
    
    >>> class TestNodeGetItem(TestNodeSetItem, TestMappingGetItem): pass 
    >>> fmtester = FullMappingTester(TestNodeGetItem)
    >>> fmtester.test___setitem__()
    >>> fmtester.test___getitem__()
    Traceback (most recent call last):
      ...
    Exception: Child ``bar`` has wrong ``__name__``
    
    >>> class TestNodeSetItem(TestNodeSetItem):
    ...     def __setitem__(self, name, value):
    ...         value.__parent__ = self
    ...         value.__name__ = name
    ...         self.data[name] = value
    
    >>> class TestNodeGetItem(TestNodeSetItem, TestMappingGetItem): pass 
    >>> fmtester = FullMappingTester(TestNodeGetItem)
    >>> fmtester.test___setitem__()
    >>> fmtester.test___getitem__()

``get``
::

    >>> fmtester.test_get()
    Traceback (most recent call last):
      ...
    AttributeError: 'TestNodeGetItem' object has no attribute 'get'

    >>> class TestMappingGet(TestMappingGetItem):
    ...     def get(self, key, default=None):
    ...         return object()
    
    >>> fmtester = FullMappingTester(TestMappingGet, include_node_checks=False)
    >>> fmtester.test___setitem__()
    >>> fmtester.test_get()
    Traceback (most recent call last):
      ...
    Exception: Expected default, got <object object at ...>
    
    >>> class TestMappingGet(TestMappingGetItem):
    ...     def get(self, key, default=None):
    ...         return default
    
    >>> fmtester = FullMappingTester(TestMappingGet, include_node_checks=False)
    >>> fmtester.test___setitem__()
    >>> fmtester.test_get()
    Traceback (most recent call last):
      ...
    Exception: Expected value, got default
    
    >>> class TestMappingGet(TestMappingGetItem):
    ...     def get(self, key, default=None):
    ...         return self.data.get(key, default)
    
    >>> fmtester = FullMappingTester(TestMappingGet, include_node_checks=False)
    >>> fmtester.test___setitem__()
    >>> fmtester.test_get()
    
``__iter__``
::

    >>> fmtester = FullMappingTester(TestMapping)
    >>> fmtester.test___iter__()
    Traceback (most recent call last):
      ...
    TypeError: 'TestMapping' object is not iterable
    
    >>> class TestMappingIter(TestMappingGet):
    ...     def __iter__(self):
    ...         return iter(list())
    
    >>> fmtester = FullMappingTester(TestMappingIter)
    >>> fmtester.test___iter__()
    Traceback (most recent call last):
      ...
    Exception: Expected 2-length result. Got ``0``
    
    >>> class TestMappingIter(TestMappingGet):
    ...     def __iter__(self):
    ...         return iter(['a', 'b'])
    
    >>> fmtester = FullMappingTester(TestMappingIter)
    >>> fmtester.test___iter__()
    Traceback (most recent call last):
      ...
    Exception: Expected ``['a', 'b']`` as keys. Got ``['foo', 'bar']``
    
    >>> class TestMappingIter(TestMappingGet):
    ...     def __iter__(self):
    ...         return self.data.__iter__()
    
    >>> fmtester = FullMappingTester(TestMappingIter, include_node_checks=False)
    >>> fmtester.test___setitem__()
    >>> fmtester.test___iter__()

``keys``
::

    >>> fmtester.test_keys()
    Traceback (most recent call last):
      ...
    AttributeError: 'TestMappingIter' object has no attribute 'keys'
    
    >>> class TestMappingKeys(TestMappingIter):
    ...     def keys(self):
    ...         return [k for k in self.data]
    
    >>> fmtester = FullMappingTester(TestMappingKeys, include_node_checks=False)
    >>> fmtester.test___setitem__()
    >>> fmtester.test_keys()

``iterkeys``
::

    >>> fmtester.test_iterkeys()
    Traceback (most recent call last):
      ...
    AttributeError: 'TestMappingKeys' object has no attribute 'iterkeys'
    
    >>> class TestMappingIterKeys(TestMappingKeys):
    ...     def iterkeys(self):
    ...         return self.data.__iter__()
    
    >>> fmtester = FullMappingTester(TestMappingIterKeys,
    ...                              include_node_checks=False)
    >>> fmtester.test___setitem__()
    >>> fmtester.test_iterkeys()

``values``
::

    >>> fmtester.test_values()
    Traceback (most recent call last):
      ...
    AttributeError: 'TestMappingIterKeys' object has no attribute 'values'
    
    >>> class TestMappingValues(TestMappingIterKeys):
    ...     def values(self):
    ...         return self.data.values()
    
    >>> fmtester = FullMappingTester(TestMappingValues,
    ...                              include_node_checks=False)
    >>> fmtester.test_values()
    Traceback (most recent call last):
      ...
    Exception: Expected 2-length result. Got ``0``
    
    >>> fmtester.test___setitem__()
    >>> fmtester.test_values()

    >>> fmtester = FullMappingTester(TestMappingValues)
    >>> fmtester.context['foo'] = TestMappingValues()
    >>> fmtester.context['bar'] = TestMappingValues()
    >>> fmtester.test_values()
    Traceback (most recent call last):
      ...
    AttributeError: 'TestMappingValues' object has no attribute '__name__'

    >>> class TestNodeValues(TestNode, TestMappingValues):
    ...     pass

    >>> fmtester = FullMappingTester(TestNodeValues)
    >>> fmtester.test___setitem__()
    >>> fmtester.test_values()
    Traceback (most recent call last):
      ...
    Exception: Expected __name__ of value invalid. Got ``None``
    
    >>> class TestNodeValues(TestNodeSetItem, TestMappingValues):
    ...     pass
    
    >>> fmtester = FullMappingTester(TestNodeValues)
    >>> fmtester.test___setitem__()
    >>> fmtester.test_values()

###
    
    
    
    fmtester.test_itervalues()
    fmtester.test_items()
    fmtester.test_iteritems()
    fmtester.test___contains__()
    fmtester.test_has_key()
    fmtester.test___len__()
    fmtester.test_update()
    fmtester.test___delitem__()
    fmtester.test_copy()
    fmtester.test_setdefault()
    fmtester.test_pop()
    fmtester.test_popitem()
    fmtester.test_clear()