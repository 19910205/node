node.plumbing.validate
======================

::

    >>> from plumber import Plumber
    >>> from node.base import OrderedNode
    >>> from node.plumbing.validate import NodeChildValidate
    
    >>> class NodeChildValidateNode(OrderedNode):
    ...     __metaclass__ = Plumber
    ...     __plumbing__ = NodeChildValidate
    
    >>> node = NodeChildValidateNode()
    >>> node.allow_non_node_childs
    False
    
    >>> node['child'] = 1
    Traceback (most recent call last):
      ...
    ValueError: Non-node childs are not allowed.
    
    >>> class SomeClass(object): pass
    
    >>> node['aclasshere'] = SomeClass
    Traceback (most recent call last):
      ...
    ValueError: It isn't allowed to use classes as values.
    
    >>> node.allow_non_node_childs = True
    
    >>> node['child'] = 1
    >>> node['child']
    1
