node.ext.zodb - proposal und discussion
=======================================

from odict.pyodict import _odict
from persistent.dict import PersistentDict
from plumber import (
    Part,
    default,
    extend,
    plumber,
)
from node.parts import Nodify

class Podict(_odict, PersistentDict):
    
    def _dict_impl(self):
        return PersistentDict


class ZODBStorage(Part):
    # c: den wrapper denke ich braucht es nicht, aber das sehen wir wenn wir 
    #    mal code haben
    # r: du meinst den Podict wrapper?
    # c: Ich mein die ZODBStorage
    implements(IStorage)
    
    @default
    @property
    def storage(self):
        if not hasattr(self, '_storage_data'):
            self._storage_data = Podict()
        return self._storage_data
    
    @extend
    def __getitem__(self, key):
        return self.storage[key]
    
    @extend
    def __delitem__(self, key):
        del self.storage[key]
    
    @extend
    def __setitem__(self, key, val):
        self.storage[key] = val
    
    @extend
    def __iter__(self):
        return self.storage.__iter__()

class ZODBNode(object):
    __metaclass__ = plumber
    __plumbing__ = Nodify, ZODBStorage

class ZODBNode(Podict):
    __metaclass__ = plumber
    __plumbing__ = Nodify

# das ist die statische variante, was oben ist ist die dynamische, die auch auf 
# instanz ebene funktioniert (funktionieren soll). providen würde ich beides, 
# je nach dem was man braucht - speed oder flexibilität. das gilt auch für die 
# sachen in storage.py würde da einfach beises anbieten.

# entweder erbt man die storage ins node plumbing rein, 
# man provided sie direkt auf der node plumbing class, 
# oder man konfiguriert es über einen storage part

# c: Storage als base class, dann limitierst du sie wieder auf die 4.
# c: Finde die Diskussion aber grad zu abstrakt - wir brauchen da keinen 
#    Konsens, sondern einfach verschiedene Meinungen im Hinterkopf und was dann 
#    ist sehen wir wenn's ist.
# r:
# usecases sind:
#    * statische plumbings
#    * plumbings zur laufzeit
#
# * pro statisch
#    - speed
#
# * kontra statisch
     - statisch eben. :) storage kann nicht konfiguriert werden